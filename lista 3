#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <locale.h>

#define MAX_FABRICANTES 3
#define MAX_PRODUTOS 6
#define MAX_UF 27

typedef struct {
    char marca[50];
    char site[100];
    char telefone[20];
    char uf[3];
} Fabricante;

typedef struct {
    char descricao[100];
    float peso;
    float valorCompra;
    float valorVenda;
    float valorLucro;
    float percentualLucro;
    Fabricante fabricante;
} Produto;

Fabricante cadastrarFabricante();
Produto cadastrarProduto(Fabricante fabricantes[], int numFabricantes);
void listarMarcas(Fabricante fabricantes[], int numFabricantes);
void listarProdutos(Produto produtos[], int numProdutos);
void listarProdutosEstado(Produto produtos[], int numProdutos);
void listarProdutosMarca(Produto produtos[], int numProdutos, Fabricante fabricantes[], int numFabricantes);
void listarEstadoProdutoMaisCaro(Produto produtos[], int numProdutos, Fabricante fabricantes[], int numFabricantes);
void listarEstadoProdutoMaisBarato(Produto produtos[], int numProdutos, Fabricante fabricantes[], int numFabricantes);
void ordenarPorValor(Produto produtos[], int numProdutos);
void ordenarPorLucro(Produto produtos[], int numProdutos);
void ordenarPorPercentualLucro(Produto produtos[], int numProdutos);

int main() {
    setlocale(LC_ALL, "");
    Fabricante fabricantes[MAX_FABRICANTES];
    Produto produtos[MAX_PRODUTOS];
    int numFabricantes = 0;
    int numProdutos = 0;
    int opcao;

    do {
        printf("===================================================================================\n");
        printf("                       MENU PRINCIPAL\n");
        printf("===================================================================================\n");
        printf("[1] Cadastrar fabricante\n");
        printf("[2] Cadastrar produto\n");
        printf("[3] Listar todas as marcas\n");
        printf("[4] Listar todos os produtos\n");
        printf("[5] Listar os produtos de um determinado estado\n");
        printf("[6] Listar os produtos de uma determinada marca\n");
        printf("[7] Apresentar o(s) estado(s) onde está registrado o produto mais caro\n");
        printf("[8] Apresentar o(s) estado(s) onde está registrado o produto mais barato\n");
        printf("[9] Listar todos os produtos em ordem crescente de valor\n");
        printf("[10] Listar todos os produtos em ordem crescente de maior 'valor do lucro'\n");
        printf("[11] Listar todos os produtos em ordem crescente de maior 'percentual de lucro'\n");
        printf("[0] Sair do programa\n");
        printf("Digite a opção desejada: ");
        scanf("%d", &opcao);

        switch (opcao) {
            case 1:
                if (numFabricantes < MAX_FABRICANTES) {
                    fabricantes[numFabricantes] = cadastrarFabricante();
                    numFabricantes++;
                    printf("Fabricante cadastrado com sucesso!\n");
                } else {
                    printf("Limite máximo de fabricantes atingido!\n");
                }
                break;
            case 2:
                if (numProdutos < MAX_PRODUTOS) {
                    produtos[numProdutos] = cadastrarProduto(fabricantes, numFabricantes);
                    numProdutos++;
                    printf("Produto cadastrado com sucesso!\n");
                } else {
                    printf("Limite máximo de produtos atingido!\n");
                }
                break;
            case 3:
                listarMarcas(fabricantes, numFabricantes);
                break;
            case 4:
                listarProdutos(produtos, numProdutos);
                break;
            case 5:
                listarProdutosEstado(produtos, numProdutos);
                break;
            case 6:
                listarProdutosMarca(produtos, numProdutos, fabricantes, numFabricantes);
                break;
            case 7:
                listarEstadoProdutoMaisCaro(produtos, numProdutos, fabricantes, numFabricantes);
                break;
            case 8:
                listarEstadoProdutoMaisBarato(produtos, numProdutos, fabricantes, numFabricantes);
                break;
            case 9:
                ordenarPorValor(produtos, numProdutos);
                break;
            case 10:
                ordenarPorLucro(produtos, numProdutos);
                break;
            case 11:
                ordenarPorPercentualLucro(produtos, numProdutos);
                break;
            case 0:
                printf("Encerrando o programa...\n");
                break;
            default:
                printf("Opção inválida!\n");
        }

        printf("\n");
    } while (opcao != 0);

    return 0;
}

Fabricante cadastrarFabricante() {
    Fabricante fabricante;

    printf("Digite a marca do fabricante: ");
    scanf(" %[^\n]s", fabricante.marca);
    printf("Digite o site do fabricante: ");
    scanf(" %[^\n]s", fabricante.site);
    printf("Digite o telefone do fabricante: ");
    scanf(" %[^\n]s", fabricante.telefone);
    printf("Digite a UF do fabricante: ");
    scanf(" %[^\n]s", fabricante.uf);

    return fabricante;
}

Produto cadastrarProduto(Fabricante fabricantes[], int numFabricantes) {
    Produto produto;

    printf("Digite a descrição do produto: ");
    scanf(" %[^\n]s", produto.descricao);
    printf("Digite o peso do produto: ");
    scanf("%f", &produto.peso);
    printf("Digite o valor de compra do produto: ");
    scanf("%f", &produto.valorCompra);
    printf("Digite o valor de venda do produto: ");
    scanf("%f", &produto.valorVenda);
    produto.valorLucro = produto.valorVenda - produto.valorCompra;
    produto.percentualLucro = (produto.valorLucro / produto.valorCompra) * 100;

    int i;
    printf("Escolha o fabricante do produto:\n");
    for (i = 0; i < numFabricantes; i++) {
        printf("[%d] %s\n", i + 1, fabricantes[i].marca);
    }
    int opcao;
    printf("Digite a opção desejada: ");
    scanf("%d", &opcao);

    if (opcao >= 1 && opcao <= numFabricantes) {
        produto.fabricante = fabricantes[opcao - 1];
    } else {
        printf("Opção inválida! Fabricante não associado.\n");
    }

    return produto;
}

void listarMarcas(Fabricante fabricantes[], int numFabricantes) {
    printf("===================================================================================\n");
    printf("              RELATORIO 1 - LISTA DE TODAS AS MARCAS\n");
    printf("===================================================================================\n");
    printf("Marca         |       site         |     Telefone       |        UF        \n");
    printf("--------------+--------------------+--------------------+--------------------------\n");

    for (int i = 0; i < numFabricantes; i++) {
        printf("%-14s | %-18s | %-18s | %s\n",
               fabricantes[i].marca, fabricantes[i].site,
               fabricantes[i].telefone, fabricantes[i].uf);
        printf("--------------+--------------------+--------------------+--------------------------\n");
    }
    printf("===================================================================================\n");
}

void listarProdutosPercentual(Produto produtos[], int numProdutos) {
    printf("===================================================================================\n");
    printf("             RELATORIO 11 - LISTA DE TODOS OS PRODUTOS EM ORDEM CRESCENTE DE PERCENTUAL DE LUCRO\n");
    printf("===================================================================================\n");
    printf("Descrição     |   Peso   |  Valor Compra  |  Valor Venda  |  Valor Lucro  |  %% Lucro  |  Marca  |  UF\n");
    printf("--------------+----------+----------------+---------------+---------------+------------+---------+------\n");

    for (int i = 0; i < numProdutos; i++) {
        printf("%-14s | %-8.2f | %-14.2f | %-13.2f | %-13.2f | %-10.2f | %-7s | %s\n",
               produtos[i].descricao, produtos[i].peso,
               produtos[i].valorCompra, produtos[i].valorVenda,
               produtos[i].valorLucro, produtos[i].percentualLucro,
               produtos[i].fabricante.marca, produtos[i].fabricante.uf);
        printf("--------------+----------+----------------+---------------+---------------+------------+---------+------\n");
    }

    
    printf("===================================================================================\n");
}

void listarProdutosLucro(Produto produtos[], int numProdutos) {
    printf("===================================================================================\n");
    printf("             RELATORIO 10 - LISTA DE TODOS OS PRODUTOS EM ORDEM CRESCENTE DE LUCRO\n");
    printf("===================================================================================\n");
    printf("Descrição     |   Peso   |  Valor Compra  |  Valor Venda  |  Valor Lucro  |  %% Lucro  |  Marca  |  UF\n");
    printf("--------------+----------+----------------+---------------+---------------+------------+---------+------\n");

    for (int i = 0; i < numProdutos; i++) {
        printf("%-14s | %-8.2f | %-14.2f | %-13.2f | %-13.2f | %-10.2f | %-7s | %s\n",
               produtos[i].descricao, produtos[i].peso,
               produtos[i].valorCompra, produtos[i].valorVenda,
               produtos[i].valorLucro, produtos[i].percentualLucro,
               produtos[i].fabricante.marca, produtos[i].fabricante.uf);
        printf("--------------+----------+----------------+---------------+---------------+------------+---------+------\n");
    }

    
    printf("===================================================================================\n");
}

void listarProdutosValor(Produto produtos[], int numProdutos) {
    printf("===================================================================================\n");
    printf("             RELATORIO 9 - LISTA DE TODOS OS PRODUTOS EM ORDEM CRESCENTE DE VALOR\n");
    printf("===================================================================================\n");
    printf("Descrição     |   Peso   |  Valor Compra  |  Valor Venda  |  Valor Lucro  |  %% Lucro  |  Marca  |  UF\n");
    printf("--------------+----------+----------------+---------------+---------------+------------+---------+------\n");

    for (int i = 0; i < numProdutos; i++) {
        printf("%-14s | %-8.2f | %-14.2f | %-13.2f | %-13.2f | %-10.2f | %-7s | %s\n",
               produtos[i].descricao, produtos[i].peso,
               produtos[i].valorCompra, produtos[i].valorVenda,
               produtos[i].valorLucro, produtos[i].percentualLucro,
               produtos[i].fabricante.marca, produtos[i].fabricante.uf);
        printf("--------------+----------+----------------+---------------+---------------+------------+---------+------\n");
    }

    
    printf("===================================================================================\n");
}

void listarProdutos(Produto produtos[], int numProdutos) {
    printf("===================================================================================\n");
    printf("             RELATORIO 4 - LISTA DE TODOS OS PRODUTOS\n");
    printf("===================================================================================\n");
    printf("Descrição     |   Peso   |  Valor Compra  |  Valor Venda  |  Valor Lucro  |  %% Lucro  |  Marca  |  UF\n");
    printf("--------------+----------+----------------+---------------+---------------+------------+---------+------\n");

    for (int i = 0; i < numProdutos; i++) {
        printf("%-14s | %-8.2f | %-14.2f | %-13.2f | %-13.2f | %-10.2f | %-7s | %s\n",
               produtos[i].descricao, produtos[i].peso,
               produtos[i].valorCompra, produtos[i].valorVenda,
               produtos[i].valorLucro, produtos[i].percentualLucro,
               produtos[i].fabricante.marca, produtos[i].fabricante.uf);
        printf("--------------+----------+----------------+---------------+---------------+------------+---------+------\n");
    }

    
    printf("===================================================================================\n");
}

void listarProdutosEstado(Produto produtos[], int numProdutos) {
    char uf[3];
    printf("Digite o estado (UF): ");
    scanf(" %[^\n]s", uf);

    printf("===================================================================================\n");
    printf("             RELATORIO 5 - LISTA DE TODOS OS PRODUTOS DE %s\n", uf);
    printf("===================================================================================\n");
    printf("Descrição     |   Peso   |  Valor Compra  |  Valor Venda  |  Valor Lucro  |  %% Lucro  |  Marca  |  UF\n");
    printf("--------------+----------+----------------+---------------+---------------+------------+---------+------\n");

    int i;
    int encontrado = 0;
    for (i = 0; i < numProdutos; i++) {
      if (strcmp(produtos[i].fabricante.uf, uf) ==0 ) {
        printf("%-14s | %-8.2f | %-14.2f | %-13.2f | %-13.2f | %-10.2f | %-7s | %s\n",
               produtos[i].descricao, produtos[i].peso,
               produtos[i].valorCompra, produtos[i].valorVenda,
               produtos[i].valorLucro, produtos[i].percentualLucro,
               produtos[i].fabricante.marca, produtos[i].fabricante.uf);
        printf("--------------+----------+----------------+---------------+---------------+------------+---------+------\n");
            encontrado = 1;
        }
    }

    if (!encontrado) {
        printf("Nenhum produto encontrado para o estado %s.\n", uf);
    }
}

void listarProdutosMarca(Produto produtos[], int numProdutos, Fabricante fabricantes[], int numFabricantes) {
    int opcao;
    printf("Escolha a marca:\n");
    int i;
    for (i = 0; i < numFabricantes; i++) {
        printf("[%d] %s\n", i + 1, fabricantes[i].marca);
    }
    printf("Digite a opção desejada: ");
    scanf("%d", &opcao);

    if (opcao >= 1 && opcao <= numFabricantes) {
        printf("===================================================================================\n");
    printf("             RELATORIO 6 - LISTA DE TODOS OS PRODUTOS DA MARCA %s\n", fabricantes[opcao - 1].marca);
    printf("===================================================================================\n");
    printf("Descrição     |   Peso   |  Valor Compra  |  Valor Venda  |  Valor Lucro  |  %% Lucro  |  Marca  |  UF\n");
    printf("--------------+----------+----------------+---------------+---------------+------------+---------+------\n");

        int j;
        int encontrado = 0;
        for (j = 0; j < numProdutos; j++) {
            if (strcmp(produtos[j].fabricante.marca, fabricantes[opcao - 1].marca) == 0) {
                 printf("%-14s | %-8.2f | %-14.2f | %-13.2f | %-13.2f | %-10.2f | %-7s | %s\n",
               produtos[j].descricao, produtos[j].peso,
               produtos[j].valorCompra, produtos[j].valorVenda,
               produtos[j].valorLucro, produtos[j].percentualLucro,
               produtos[j].fabricante.marca, produtos[j].fabricante.uf);
        printf("--------------+----------+----------------+---------------+---------------+------------+---------+------\n");
                encontrado = 1;
            }
        }

        if (!encontrado) {
            printf("Nenhum produto encontrado para a marca %s.\n", fabricantes[opcao - 1].marca);
        }
    } else {
        printf("Opção inválida!\n");
    }
}

void listarEstadoProdutoMaisCaro(Produto produtos[], int numProdutos, Fabricante fabricantes[], int numFabricantes) {
    float valorMaisCaro = 0;
    int i;
    for (i = 0; i < numProdutos; i++) {
        if (produtos[i].valorVenda > valorMaisCaro) {
            valorMaisCaro = produtos[i].valorVenda;
        }
    }

    printf("===================================================================================\n");
    printf("             RELATORIO 7 - APRESENTAR ESTADO(S) ONDE ESTÁ REGISTRADO O(S) PRODUTO(S) MAIS CARO(S) \n");
    printf("===================================================================================\n");
    printf("Descrição     |   Peso   |  Valor Compra  |  Valor Venda  |  Valor Lucro  |  %% Lucro  |  Marca  |  UF\n");
    printf("--------------+----------+----------------+---------------+---------------+------------+---------+------\n");

    int encontrado = 0;
    for (i = 0; i < numProdutos; i++) {
        if (produtos[i].valorVenda == valorMaisCaro) {
             printf("%-14s | %-8.2f | %-14.2f | %-13.2f | %-13.2f | %-10.2f | %-7s | %s\n",
               produtos[i].descricao, produtos[i].peso,
               produtos[i].valorCompra, produtos[i].valorVenda,
               produtos[i].valorLucro, produtos[i].percentualLucro,
               produtos[i].fabricante.marca, produtos[i].fabricante.uf);
        printf("--------------+----------+----------------+---------------+---------------+------------+---------+------\n");
            encontrado = 1;
        }
    }

    if (!encontrado) {
        printf("Nenhum produto encontrado.\n");
    }
}

void listarEstadoProdutoMaisBarato(Produto produtos[], int numProdutos, Fabricante fabricantes[], int numFabricantes) {
    float valorMaisBarato = produtos[0].valorVenda;
    int i;
    for (i = 1; i < numProdutos; i++) {
        if (produtos[i].valorVenda < valorMaisBarato) {
            valorMaisBarato = produtos[i].valorVenda;
        }
    }

    printf("===================================================================================\n");
    printf("             RELATORIO 8 - APRESENTAR ESTADO(S) ONDE ESTÁ REGISTRADO O(S) PRODUTO(S) MAIS BARATO(S) \n");
    printf("===================================================================================\n");
    printf("Descrição     |   Peso   |  Valor Compra  |  Valor Venda  |  Valor Lucro  |  %% Lucro  |  Marca  |  UF\n");
    printf("--------------+----------+----------------+---------------+---------------+------------+---------+------\n");

    int encontrado = 0;
    for (i = 0; i < numProdutos; i++) {
        if (produtos[i].valorVenda == valorMaisBarato) {
             printf("%-14s | %-8.2f | %-14.2f | %-13.2f | %-13.2f | %-10.2f | %-7s | %s\n",
               produtos[i].descricao, produtos[i].peso,
               produtos[i].valorCompra, produtos[i].valorVenda,
               produtos[i].valorLucro, produtos[i].percentualLucro,
               produtos[i].fabricante.marca, produtos[i].fabricante.uf);
        printf("--------------+----------+----------------+---------------+---------------+------------+---------+------\n");
            encontrado = 1;
        }
    }

    if (!encontrado) {
        printf("Nenhum produto encontrado.\n");
    }
}

void ordenarPorValor(Produto produtos[], int numProdutos) {
    int i, j;
    Produto temp;

    for (i = 0; i < numProdutos - 1; i++) {
        for (j = 0; j < numProdutos - i - 1; j++) {
            if (produtos[j].valorVenda > produtos[j + 1].valorVenda) {
                temp = produtos[j];
                produtos[j] = produtos[j + 1];
                produtos[j + 1] = temp;
            }
        }
    }

    listarProdutosValor(produtos, numProdutos);
}

void ordenarPorLucro(Produto produtos[], int numProdutos) {
    int i, j;
    Produto temp;

    for (i = 0; i < numProdutos - 1; i++) {
        for (j = 0; j < numProdutos - i - 1; j++) {
            if (produtos[j].valorLucro > produtos[j + 1].valorLucro) {
                temp = produtos[j];
                produtos[j] = produtos[j + 1];
                produtos[j + 1] = temp;
            }
        }
    }

    listarProdutosLucro(produtos, numProdutos);
}

void ordenarPorPercentualLucro(Produto produtos[], int numProdutos) {
    int i, j;
    Produto temp;

    for (i = 0; i < numProdutos - 1; i++) {
        for (j = 0; j < numProdutos - i - 1; j++) {
            if (produtos[j].percentualLucro > produtos[j + 1].percentualLucro) {
                temp = produtos[j];
                produtos[j] = produtos[j + 1];
                produtos[j + 1] = temp;
            }
        }
    }

    listarProdutosPercentual(produtos, numProdutos);
}
